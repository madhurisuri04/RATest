
CREATE PROCEDURE [dbo].[spr_GetConnectionBySourceIP] 
	-- Add the parameters for the stored procedure here
	@IP VARCHAR(20), 
	@RETURNALLCONNECTIONS BIT = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

DECLARE @LIKEIP VARCHAR(20)
DECLARE @CONNECTION_ID INT
DECLARE @POSSIBLE_SOURCE_IPs VARCHAR(500)
DECLARE @NEWIP VARCHAR(20)
DECLARE @RANGE VARCHAR(100)
DECLARE @STARTRANGE VARCHAR(20)
DECLARE @ENDRANGE VARCHAR(20)
DECLARE @STARTCOUNT INT
DECLARE @ENDCOUNT INT
DECLARE @TEMPRANGE INT
DECLARE @PREFIX VARCHAR(20)

SET @LIKEIP = REVERSE(RIGHT(REVERSE(@IP), (LEN(@IP) - CHARINDEX('.', REVERSE(@IP), 0)) + 1))

CREATE TABLE #POSSIBLE_SOURCE_IPs (CONNECTION_ID INT, POSSIBLE_SOURCE_IP VARCHAR(500))
CREATE TABLE #SPILTS (CONNECTION_ID INT, POSSIBLE_SOURCE_IP VARCHAR(500), HASRUN SMALLDATETIME NULL)

DECLARE IP_Cursor CURSOR FAST_FORWARD
FOR
SELECT CONNECTION_ID, POSSIBLE_SOURCE_IPs from dbo.tbl_connection 
WHERE POSSIBLE_SOURCE_IPs LIKE '%' + @LIKEIP + '%' 

OPEN IP_Cursor

FETCH NEXT FROM IP_Cursor
INTO 	
	@CONNECTION_ID, 
	@POSSIBLE_SOURCE_IPs

WHILE @@FETCH_STATUS = 0
BEGIN
	--SPILT UP
	INSERT #SPILTS
	SELECT @CONNECTION_ID, Item, NULL FROM dbo.fn_Split(@POSSIBLE_SOURCE_IPs, ',')

	UPDATE #SPILTS SET HASRUN = GETDATE() WHERE POSSIBLE_SOURCE_IP NOT LIKE '%-%'
	AND CONNECTION_ID = @CONNECTION_ID AND HASRUN IS NULL

	WHILE EXISTS(SELECT * FROM #SPILTS WHERE HASRUN IS NULL AND CONNECTION_ID = @CONNECTION_ID)
	BEGIN

		SELECT TOP 1 @RANGE = POSSIBLE_SOURCE_IP FROM #SPILTS 
		WHERE POSSIBLE_SOURCE_IP LIKE '%-%' AND CONNECTION_ID = @CONNECTION_ID 
		AND HASRUN IS NULL

		--BREAK UP ANY RANGES AND INSERT THEM INTO THE #SPLIT TABLE	
		SET @STARTRANGE = RTRIM(LEFT(@RANGE, CHARINDEX('-', @RANGE, 0) - 1))
		SET @ENDRANGE = RTRIM(LTRIM(RIGHT(@RANGE, (LEN(@RANGE) - CHARINDEX('-', @RANGE, 0)) - 1)))

		SET @PREFIX = REVERSE(RIGHT(REVERSE(@STARTRANGE), (LEN(@STARTRANGE) - CHARINDEX('.', REVERSE(@STARTRANGE), 0)) + 1))
		SET @STARTCOUNT = REVERSE(LEFT(REVERSE(@STARTRANGE), CHARINDEX('.', REVERSE(@STARTRANGE), 0) -1))
		SET @ENDCOUNT = REVERSE(LEFT(REVERSE(@ENDRANGE), CHARINDEX('.', REVERSE(@ENDRANGE), 0) -1))
		SET @TEMPRANGE = @STARTCOUNT

		--PRINT @STARTRANGE
		--PRINT @STARTCOUNT
		--PRINT @ENDRANGE
		--PRINT @ENDCOUNT

		INSERT #SPILTS
		SELECT @CONNECTION_ID, @STARTRANGE, GETDATE()

		WHILE @TEMPRANGE < @ENDCOUNT
		BEGIN
			
			SET @TEMPRANGE = @TEMPRANGE + 1

			INSERT #SPILTS
			SELECT @CONNECTION_ID, @PREFIX + CAST(@TEMPRANGE AS VARCHAR(4)), GETDATE()
			
		END
		


		UPDATE #SPILTS SET HASRUN = GETDATE() WHERE POSSIBLE_SOURCE_IP = @RANGE 
		AND CONNECTION_ID = @CONNECTION_ID AND HASRUN IS NULL

	END

	DELETE FROM #SPILTS
	WHERE POSSIBLE_SOURCE_IP LIKE '%-%' AND CONNECTION_ID = @CONNECTION_ID

	FETCH NEXT FROM IP_Cursor
	INTO 	
	@CONNECTION_ID, 
	@POSSIBLE_SOURCE_IPs

END

CLOSE IP_Cursor
DEALLOCATE IP_Cursor

IF @RETURNALLCONNECTIONS = 1
BEGIN
	SELECT DISTINCT CONNECTION_ID FROM #SPILTS WHERE @IP = POSSIBLE_SOURCE_IP
END
ELSE
BEGIN
	SELECT TOP 1 CONNECTION_ID FROM #SPILTS WHERE @IP = POSSIBLE_SOURCE_IP
END


DROP TABLE #SPILTS
DROP TABLE #POSSIBLE_SOURCE_IPs

END
